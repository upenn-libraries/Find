version: "3.8"

{% set queues = item.queues | map('regex_replace', '^(.*)$', '"-q", "\\1"') | join(', ') %}

services:
  sidekiq-{{ item.name }}:
    image: "{{ catalog_find_image_name }}:{{ catalog_find_image_tag }}"
    command: ["bundle", "exec", "sidekiq", {{ queues }}, "-c", "{{ item.concurrency }}"]
    deploy:
      placement:
        constraints:
          - "node.labels.catalog_find_sidekiq == true"
      update_config:
        order: "start-first"
        parallelism: 1
    environment:
{% if is_development == true %}
      APP_UID: ${UID:-1000}
      APP_GID: ${GID:-1000}
      SOLR_TEST_URL: "{{ catalog_find_solr_test_url }}"
{% endif %}
      DATABASE_HOST: "postgres"
      DATABASE_NAME: "{{ postgres_database_name }}"
      DATABASE_PASSWORD: /run/secrets/database_password
      DATABASE_USER: "{{ postgres_database_user }}"
      DB_POOL: "{{ item.concurrency }}"
      APP_URL: "{{ catalog_find_url }}"
      APP_IMAGE_TAG: ${APP_IMAGE_TAG}
      RAILS_ENV: "{{ catalog_find_rails_env }}"
      REDIS_SIDEKIQ_USER: "sidekiq"
      REDIS_URL: "redis://redis:{{ redis.port }}/0"
      SOLR_INSTANCES: "{{ solr_instances }}"
      SOLR_URL: "{{ catalog_find_solr_url }}"
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "ps aux | grep '[s]idekiq 7' || exit 1",
        ]
      interval: 30s
      retries: 3
      start_period: 1m
      timeout: 30s
    logging:
      driver: json-file
      options:
        max-file: "3"
        max-size: "10m"
    networks:
      - postgres
      - redis
      - traefik
    secrets:
      - database_password
      - source: rails_master_key
        target: "/home/app/config/credentials/{{ catalog_find_rails_env }}.key"
        uid: "1000"
        gid: "1000"
        mode: 0440
      - redis_sidekiq_password
{% if is_development == false %}
      - honeybadger_api_key
{% endif %}
    volumes:
{% if is_development == true %}
      - /catalog-find/ansible/roles/catalog-find/files/src/:/home/app
{% else %}
      - app_storage:/home/app/storage
{% endif %}

networks:
  postgres:
    external: true
  redis:
    external: true
  traefik:
    external: true

secrets:
  database_password:
    external: true
    name: "{{ postgres_database_versioned_secrets.database_password.secret_name_prefix + postgres_database_versioned_secrets.database_password.version }}"
  rails_master_key:
    external: true
    name: "{{ 'catalog_find_rails_master_key_v' ~ catalog_find_versioned_secrets.rails_master_key.version }}"
  redis_sidekiq_password:
    external: true
    name: "{{ 'redis_sidekiq_password_v' ~ redis.versioned_configs.users_acl.users | selectattr('name', 'equalto', 'sidekiq') | map(attribute='version')  | join('') }}"
{% if is_development == false %}
  honeybadger_api_key:
    external: true
    name: "{{ 'catalog_find_honeybadger_api_key_v' ~ catalog_find_versioned_secrets.honeybadger_api_key.version }}"
{% endif %}

{% if is_development == false %}
volumes:
  app_storage:
    external: true
    name: app_storage
{% endif %}
