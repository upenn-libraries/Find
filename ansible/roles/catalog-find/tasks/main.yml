---
- name: Create catalog-find dir
  ansible.builtin.file:
    path: "{{ project_root ~ '/catalog-find' }}"
    state: directory
    mode: 0440

# If is_development = true and catalog_find_build_docker_image = false
# Pull existing docker image from the registry to reduce build time
- name: Pull and use docker image from registry
  block:
    # Pull registry image
    - name: Pull the image from the registry
      community.docker.docker_image:
        force_source: true
        force_tag: true
        name: "{{ catalog_find_image_registry ~ ':' ~ catalog_find_image_tag }}"
        repository: "{{ catalog_find_image_name ~ ':' ~ catalog_find_image_tag }}"
        source: pull
      when: is_development and not catalog_find_build_docker_image | default (false, true)
      tags: dev_environment
  rescue:
    # An error occurred in the process of pulling the registry so build the image instead
    - name: Failed to find registry image - building image instead
      import_tasks: "build_docker_image.yml"
      when: is_development and not catalog_find_build_docker_image | default (false, true)
      tags: dev_environment

# Build the docker image
- name: "Build docker image"
  import_tasks: "build_docker_image.yml"
  when: is_development and catalog_find_build_docker_image | default (false, true)
  tags: dev_environment

- name: Create versioned docker secrets
  community.docker.docker_secret:
    name: "{{ 'catalog_find_' ~ item.key ~ '_v' ~ item.value.version }}"
    data: "{{ item.value.value }}"
    state: present
  with_dict:
    - "{{ catalog_find_versioned_secrets }}"
  tags: versioned_secrets
  no_log: true

# Execute development env steps
- name: Deploy catalog-find development environment
  community.docker.docker_stack:
    name: "catalog-find"
    compose:
      - "{{ role_path ~ '/files/docker-compose.yml' }}"
      - "{{ role_path ~ '/files/docker-compose.dev.yml' }}"
    state: present
  environment:
    APP_IMAGE_NAME: "{{ catalog_find_image_name }}"
    APP_IMAGE_TAG: "{{ catalog_find_image_tag }}"
    APP_PORT: "{{ catalog_find_port }}"
    APP_REPLICAS: "{{ catalog_find_replicas }}"
    APP_URL: "{{ catalog_find_url }}"
    CHROME_PORT: "{{ chrome.port }}"
    DATABASE_NAME: "{{ postgres_database_name }}"
    DATABASE_PASSWORD: "{{ postgres_database_versioned_secrets.database_password.secret_name_prefix + postgres_database_versioned_secrets.database_password.version }}"
    DATABASE_USER: "{{ postgres_database_user }}"
    RAILS_ENV: "{{ catalog_find_rails_env }}"
    RAILS_MASTER_KEY: "{{ 'catalog_find_rails_master_key_v' ~ catalog_find_versioned_secrets.rails_master_key.version }}"
    SOLR_INSTANCES: "{{ solr_instances }}"
    SOLR_TEST_URL: "{{ catalog_find_solr_test_url }}"
    SOLR_URL: "{{ catalog_find_solr_url }}"
  changed_when: false
  no_log: true
  when: is_development | default (false, true)
  tags: dev_environment

# Execute staging/production steps
- name: Copy docker-compose file
  copy:
    src: "../files/{{ item }}"
    dest: "{{ project_root ~ '/catalog-find/' }}"
  when: not is_development | default (false) == true
  loop:
    - "docker-compose.yml"
    - "docker-compose.prod.yml"

# Execute staging/production env steps
- name: Deploy catalog-find
  community.docker.docker_stack:
    name: "catalog-find"
    compose:
      - "{{ project_root ~ '/catalog-find/docker-compose.yml' }}"
      - "{{ project_root ~ '/catalog-find/docker-compose.prod.yml' }}"
    state: present
  environment:
    APP_IMAGE_NAME: "{{ catalog_find_image_name }}"
    APP_IMAGE_TAG: "{{ catalog_find_image_tag }}"
    APP_PORT: "{{ catalog_find_port }}"
    APP_REPLICAS: "{{ catalog_find_replicas }}"
    APP_URL: "{{ catalog_find_url }}"
    DATABASE_NAME: "{{ postgres_database_name }}"
    DATABASE_PASSWORD: "{{ postgres_database_versioned_secrets.database_password.secret_name_prefix + postgres_database_versioned_secrets.database_password.version }}"
    DATABASE_USER: "{{ postgres_database_user }}"
    HONEYBADGER_API_KEY: "{{ 'catalog_find_honeybadger_api_key_v' ~ catalog_find_versioned_secrets.honeybadger_api_key.version }}"
    RAILS_ENV: "{{ catalog_find_rails_env }}"
    RAILS_MASTER_KEY: "{{ 'catalog_find_rails_master_key_v' ~ catalog_find_versioned_secrets.rails_master_key.version }}"
    SOLR_INSTANCES: "{{ solr_instances }}"
    SOLR_URL: "{{ 'catalog_find_solr_url_v' ~ catalog_find_versioned_secrets.solr_url.version }}"
  changed_when: false
  no_log: true
  when: not is_development | default (false, true)

- name: Recursively remove project directory
  ansible.builtin.file:
    path: "{{ project_root ~ '/catalog-find' }}"
    state: absent
  when: not is_development | default (false, true)
