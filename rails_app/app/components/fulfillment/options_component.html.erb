<%= turbo_frame_tag 'options_frame' do %>
  <% if deliverable? %>
    <div id="delivery-options" data-controller="request-options" data-request-options-comments-outlet="#add-comments">
      <% if options.ill_pickup? %>
        <p class="alert alert-info mb-3">
          <%= t('requests.form.options.only_ill_requestable') %>
        </p>
      <% end %>
      <fieldset>
        <legend class="h6"> <%= t('requests.form.options.label') %></legend>
        <ul class="list-group">
          <% if options.electronic? %>
            <%= render(Fulfillment::Options::ElectronicComponent.new(checked: true, data: { action: 'change->request-options#optionChanged' })) %>
          <% end %>

          <% if options.office? %>
            <%= render(Fulfillment::Options::OfficeComponent.new(user: user,
                                                                       checked: !options.electronic?,
                                                                       data: { action: 'change->request-options#optionChanged' })) %>
          <% end %>

          <% if options.pickup? %>
            <%= render(Fulfillment::Options::PickupComponent.new(user: user,
                                                                       checked: !options.any?(:electronic, :office),
                                                                       data: { action: 'change->request-options#optionChanged' })) %>
          <% end %>

          <% if options.ill_pickup? %>
            <%= render(Fulfillment::Options::PickupComponent.new(user: user, ill: true,
                                                                       checked: !options.any?(:electronic, :office),
                                                                       data: { action: 'change->request-options#optionChanged' })) %>
          <% end %>

          <% if options.mail? %>
            <%= render(Fulfillment::Options::MailComponent.new(user: user, data: { action: 'change->request-options#optionChanged' })) %>
          <% end %>
        </ul>
      </fieldset>

      <%# toggleable comments box, for direct-from-form (no redirect) Alma and ILL requests only %>
      <% if commentable? %>
        <div id="add-comments" class="mt-2" data-controller="comments">
          <%= link_to t('requests.form.add_comments'), '', { data: { comments_target: 'addCommentsButton', action: 'click->comments#showCommentsArea' } } %>
          <div class="d-none" data-comments-target="commentsArea">
            <div class="d-flex justify-content-between">
              <%= label_tag :comments, t('requests.form.comments_label'), class: 'form-label' %>
              <a href="#">
                <i class="bi bi-x" data-comments-target="hideCommentsButton" data-action="click->comments#hideCommentsArea"></i>
              </a>
            </div>
            <%= text_area_tag :comments, nil, class: 'form-control mb-3' %>
          </div>
        </div>
      <% end %>

      <%# Add hidden fields with values needed for form submission to the request endpoint. %>
      <% item.loan_params.each do |k, v| %>
        <%= hidden_field_tag k, v %>
      <% end %>

      <div class="request-buttons mt-3">
        <%= submit_button_for(Fulfillment::Request::Options::OFFICE) %>
        <%= submit_button_for(Fulfillment::Request::Options::PICKUP) %>
        <%= submit_button_for(Fulfillment::Request::Options::ILL_PICKUP) %>
        <%= submit_button_for(Fulfillment::Request::Options::MAIL) %>
        <%= electronic_delivery_link %>
      </div>
    </div>
  <% elsif options.reserves? %>
    <%= render Fulfillment::Options::NonCircComponent.new(type: :reserves, library: item.location.library_name) %>
  <% elsif options.reference? %>
    <%= render Fulfillment::Options::NonCircComponent.new(type: :reference, library: item.location.library_name) %>
  <% elsif options.in_house? %>
    <%= render Fulfillment::Options::NonCircComponent.new(type: :in_house, library: item.location.library_name) %>
  <% elsif options.aeon? %>
    <%= render Fulfillment::Options::NonCircComponent.new(type: :aeon, action_link: aeon_link) %>
  <% elsif options.archives? %>
    <%= render Fulfillment::Options::NonCircComponent.new(type: :archives) %>
  <% elsif options.hsp? %>
    <%= render Fulfillment::Options::NonCircComponent.new(
      type: :hsp, action_link: link_to(t('requests.form.buttons.hsp'), t('urls.requesting_info.hsp_appointment'), class: 'btn btn-success btn-lg', target: '_blank')
    ) %>
  <% else %>
    <%= render Fulfillment::Options::NonCircComponent.new(type: :unavailable) %>
  <% end %>
<% end %>
